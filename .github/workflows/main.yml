name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Ermöglicht manuelles Auslösen des Workflows

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9.13'  # Exakt die Version aus buildozer.spec

    - name: Install System Dependencies
  run: |
    sudo apt-get update
    sudo apt-get install -y \
      git zip unzip openjdk-17-jdk python3-pip \
      autoconf libtool pkg-config zlib1g-dev \
      libncurses5-dev libncursesw5-dev libtinfo-dev \
      cmake libffi-dev libssl-dev patch
    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cython==0.29.24  # Ältere Cython-Version für bessere Kompatibilität
        pip install buildozer==1.5.0

    - name: Patch pyjnius
      run: |
        mkdir -p /tmp/pyjnius_patch
        cd /tmp/pyjnius_patch
        pip download pyjnius
        tar xf pyjnius-*.tar.gz
        cd pyjnius-*/
        # Patch für das long-Typ-Problem
        sed -i 's/isinstance(arg, long)/hasattr(__builtins__, "long") and isinstance(arg, __builtins__.long)/g' jnius/jnius_utils.pxi
        pip install -e .

    - name: Build APK with Buildozer
      run: |
        # Stellen Sie sicher, dass die NDK-Version in buildozer.spec korrekt ist (25b)
        buildozer android debug

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: voice-cloning-app-debug
        path: bin/*.apk
        
