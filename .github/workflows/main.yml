# Name des Workflows
name: Build Android APK

# Trigger für den Workflow
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Repository auschecken
    - name: Repository auschecken
      uses: actions/checkout@v4

    # 2. Python-Umgebung einrichten
    - name: Python einrichten
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    # 3. System-Abhängigkeiten für Buildozer installieren
    - name: System-Abhängigkeiten installieren
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip python3-pip \
          autoconf libtool pkg-config zlib1g-dev \
          libncurses5-dev libncursesw5-dev libtinfo-dev \
          cmake libffi-dev libssl-dev patch wget

    # 4. Java Development Kit (JDK) einrichten
    - name: Java JDK einrichten
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    # 5. Android SDK Command-Line Tools einrichten
    - name: Android SDK Command-Line Tools einrichten
      run: |
        echo "Lade Android Command-Line Tools herunter..."
        wget -q "https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip" -O commandlinetools.zip
        
        ANDROID_SDK_ROOT="${HOME}/android-sdk"
        mkdir -p "${ANDROID_SDK_ROOT}/cmdline-tools"
        unzip -q commandlinetools.zip -d "${ANDROID_SDK_ROOT}/cmdline-tools"
        mv "${ANDROID_SDK_ROOT}/cmdline-tools/cmdline-tools" "${ANDROID_SDK_ROOT}/cmdline-tools/latest"
        rm commandlinetools.zip
        
        echo "Setze ANDROID_HOME und aktualisiere den PATH..."
        echo "ANDROID_HOME=${ANDROID_SDK_ROOT}" >> $GITHUB_ENV
        echo "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "${ANDROID_SDK_ROOT}/platform-tools" >> $GITHUB_PATH

    # 6. Android SDK-Komponenten installieren und Lizenzen akzeptieren (VERBESSERT)
    - name: SDK-Lizenzen akzeptieren und spezifische Build-Tools installieren
      run: |
        echo "Akzeptiere automatisch alle SDK-Lizenzen..."
        yes | sdkmanager --licenses
        
        echo "Installiere proaktiv die von Buildozer benötigten SDK-Komponenten..."
        # Wir installieren die genaue Build-Tools-Version (36.0.0 laut Fehlerlog),
        # um den Lizenzfehler während des Buildozer-Laufs zu verhindern.
        sdkmanager "platform-tools" "build-tools;36.0.0"

    # 7. Python-Abhängigkeiten für den Build installieren
    - name: Python-Abhängigkeiten installieren
      run: |
        python -m pip install --upgrade pip
        pip install "cython==0.29.34" buildozer==1.5.0

    # 8. buildozer.spec für den CI-Build anpassen (VERBESSERT)
    - name: buildozer.spec für CI anpassen
      run: |
        echo "Stelle sicher, dass buildozer.spec die korrekte Build-Tools-Version verwendet..."
        # Wir stellen sicher, dass Buildozer die Lizenzen als akzeptiert ansieht und die Build-Tools-Version
        # mit der oben installierten Version (36.0.0) übereinstimmt.
        sed -i 's/^#? *android.accept_sdk_license *=.*/android.accept_sdk_license = True/' buildozer.spec
        sed -i 's/^#? *android.build_tools_version *=.*/android.build_tools_version = 36.0.0/' buildozer.spec
        
        echo "Inhalt der angepassten buildozer.spec:"
        cat buildozer.spec

    # 9. Debugging-Informationen zur Umgebung ausgeben
    - name: Umgebung und Pfade vor dem Build prüfen
      run: |
        echo "--- Umgebungs-Debug ---"
        java -version
        python --version
        buildozer --version
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "Installierte SDK-Pakete:"
        sdkmanager --list_installed
        echo "--- Ende Debug ---"

    # 10. APK mit Buildozer erstellen
    - name: APK mit Buildozer erstellen
      run: |
        buildozer -v android debug

    # 11. Erstelltes APK als Artefakt hochladen
    - name: APK-Artefakt hochladen
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: App-Debug-APK
        path: bin/*.apk
        retention-days: 7
        
