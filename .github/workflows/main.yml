name: Build Android APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # Checkt den Code direkt in GITHUB_WORKSPACE aus.
        # GITHUB_WORKSPACE ist /home/runner/work/Cloning-App/Cloning-App

      - name: List files in GITHUB_WORKSPACE for diagnosis
        run: |
          echo "GITHUB_WORKSPACE is: ${{ github.workspace }}"
          echo "Listing files in GITHUB_WORKSPACE:"
          ls -Al ${{ github.workspace }} # -A zeigt auch versteckte Dateien, l f√ºr langes Format

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
          # Die Muster sind relativ zum GITHUB_WORKSPACE.
          # Da GITHUB_WORKSPACE bereits /home/runner/work/Cloning-App/Cloning-App ist
          # und die Gradle-Dateien direkt darin liegen:
          cache-dependency-path: |
            **/*.gradle*
            **/gradle-wrapper.properties
            **/gradle/libs.versions.toml
            **/versions.properties

      - name: Grant execute permission for gradlew
        # working-directory ist GITHUB_WORKSPACE (Standard, kann auch weggelassen werden)
        working-directory: ${{ github.workspace }}
        run: chmod +x ./gradlew

      - name: Build debug APK
        working-directory: ${{ github.workspace }}
        run: ./gradlew assembleDebug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: cloning-app-debug-apk
          # Pfad ist relativ zum GITHUB_WORKSPACE
          path: ${{ github.workspace }}/app/build/outputs/apk/debug/app-debug.apk
